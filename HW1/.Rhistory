?pt()
pt(2.31, df = 18)
pt(-abs(2.31), df = 18)
?abs()
-abs(1)
pt(-2.31), df = 18)
pt(-2.31, df = 18)
print("p-val = " + a)
print("p-val = ", a)
print(c("p-val = ", a))
print("p-val = ")
print(paste("p-val = ", a))
a <- pt(-2.31, df = 18)
print(paste("p-val = ", a))
print(paste("p-val for t0 = 2.31: ", a))
b <- pt(-3.60, df = 18)
print(paste("p-val for t0 = 2.31: ", a))
c <- pt(-1.95, df = 18)
print(paste("p-val for t0 = 2.31: ", a))
d <- pt(-2.19, df = 18)
print(paste("p-val for t0 = 2.31: ", a))
a1 <- pt(-2.31, df = 18)
print(paste("p-val for t0 = 2.31: ", a))
b1 <- pt(-3.60, df = 18)
print(paste("p-val for t0 = 2.31: ", a))
c1 <- pt(-1.95, df = 18)
print(paste("p-val for t0 = 2.31: ", a))
d1 <- pt(-2.19, df = 18)
print(paste("p-val for t0 = 2.31: ", a))
a1 <- pt(-2.31, df = 18)
print(paste("p-val for t0 = 2.31: ", a))
b1 <- pt(-3.60, df = 18)
print(paste("p-val for t0 = 2.31: ", a))
c1 <- pt(-1.95, df = 18)
print(paste("p-val for t0 = 2.31: ", a))
d1 <- pt(-2.19, df = 18)
print(paste("p-val for t0 = 2.31: ", a))
?t.test
# Problem 2.7
a1 <- pt(-2.31, df = 18)
print(paste("p-val for t0 = 2.31: ", a))
b1 <- pt(-3.60, df = 18)
print(paste("p-val for t0 = 2.31: ", a))
c1 <- pt(-1.95, df = 18)
print(paste("p-val for t0 = 2.31: ", a))
d1 <- pt(-2.19, df = 18)
print(paste("p-val for t0 = 2.31: ", a))
# Problem 2.7
a1 <- pt(-2.31, df = 18)
print(paste("p-val for t0 = 2.31: ", a))
b1 <- pt(-3.60, df = 18)
print(paste("p-val for t0 = 3.60: ", a))
c1 <- pt(-1.95, df = 18)
print(paste("p-val for t0 = 1.95: ", a))
d1 <- pt(-2.19, df = 18)
print(paste("p-val for t0 = 2.19: ", a))
# Problem 2.7
a1 <- pt(-2.31, df = 18)
print(paste("p-val for t0 = 2.31: ", a1))
b1 <- pt(-3.60, df = 18)
print(paste("p-val for t0 = 3.60: ", b1))
c1 <- pt(-1.95, df = 18)
print(paste("p-val for t0 = 1.95: ", c1))
d1 <- pt(-2.19, df = 18)
print(paste("p-val for t0 = 2.19: ", d1))
?sd()
install.packages("plotrix")
# Problem 2.10
library(plotrix)
?std.error
# Problem 2.10
std_error_mu <- function(x1, x2, t0) {
return (abs((x1 - x2) / t0))
}
}
# Problem 2.10
std_error_mu <- function(diff, t0) {
return (abs(diff / t0))
}
std_error_mu(11.5, -1.88)
# Problem 2.12
a3 <- pt(-2.48, df = 9)
print(paste("p-val for t0 = 2.48: ", a3))
b3 <- pt(3.95, df = 9)
print(paste("p-val for t0 = -3.95: ", b3))
c3 <- pt(-2.69, df = 9)
print(paste("p-val for t0 = 2.69: ", c3))
d3 <- pt(-1.88, df = 9)
print(paste("p-val for t0 = 1.88: ", d3))
e3 <- pt(1.25, df = 9)
print(paste("p-val for t0 = 1.88: ", e3))
# Problem 2.31
l <- c(
5.34,
6.65,
4.76,
5.98,
7.25,
6.00,
7.55,
5.54,
5.62,
6.21,
5.97,
7.35,
5.44,
4.39,
4.98,
5.25,
6.35,
4.61,
6.00,
5.32
)
sd(l)
sd(l) * sd(l)
qqplot(l)
qqpnorm(l)
qqnorm(l)
qqline(l)
qqnorm(l, main = "d) Plot for Uniformity")
qqline(l)
# Problem 2.26
p1 <- c(65, 82, 81, 67, 57, 59, 66, 75, 82, 70)
p2 <- c(64, 56, 71, 69, 83, 74, 59, 82, 65, 79)
# Problem 2.26
p1 <- c(65, 82, 81, 67, 57, 59, 66, 75, 82, 70)
p2 <- c(64, 56, 71, 69, 83, 74, 59, 82, 65, 79)
qqnorm(p1, main = "c) Plot for Type 1")
qqline(p1)
qqnorm(p2, main = "c) Plot for Type 2")
qqline(p2)
qqnorm(p1, main = "c) Plot for Type 1")
qqline(p1)
